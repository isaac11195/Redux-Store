{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","length","map","purchaseQuantity","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d9058e1.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\n","import { useReducer } from 'react';\n\nimport {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n  export const reducer = (state, action) => {\n    switch (action.type) {\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n      case UPDATE_PRODUCTS:\n        return {\n          ...state,\n          products: [...action.products]\n        };\n      // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n      case UPDATE_CATEGORIES:\n        return {\n          ...state,\n          categories: [...action.categories]\n        };\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n              ...state,\n              currentCategory: action.currentCategory\n                  };\n                  case ADD_TO_CART:\n                    return {\n                      ...state,\n                      cartOpen: true,\n                      cart: [...state.cart, action.product]\n                    };            \n        case ADD_MULTIPLE_TO_CART:\n         return {\n             ...state,\n              cart: [...state.cart, ...action.products]\n             };   \n             \n             case REMOVE_FROM_CART:\n  let newState = state.cart.filter(product => {\n    return product._id !== action._id;\n  });\n\n  return {\n    ...state,\n    cartOpen: newState.length > 0,\n    cart: newState\n  };\n\n  case UPDATE_CART_QUANTITY:\n  return {\n    ...state,\n    cartOpen: true,\n    cart: state.cart.map(product => {\n      if (action._id === product._id) {\n        product.purchaseQuantity = action.purchaseQuantity;\n      }\n      return product;\n    })\n  };\n\n  case CLEAR_CART:\n    return {\n      ...state,\n      cartOpen: false,\n      cart: []\n    };\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n\n      default:\n        return state;\n    }\n\n    \n\n  };\n  export function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n  }\n\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: ''\n  });\n    // use this to confirm it works!\n    console.log(state);\n    return <Provider value={[state, dispatch]} {...props} />;\n  };\n\n  const useStoreContext = () => {\n    return useContext(StoreContext);\n  };\n\n  export { StoreProvider, useStoreContext };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { pluralize } from \"../../utils/helpers\"\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { idbPromise } from \"../../utils/helpers\";\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n\n const [state, dispatch] = useStoreContext();\n\n const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n  \n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\nfunction filterProducts() {\n  if (!currentCategory) {\n    return state.products;\n  }\n\n  return state.products.filter(product => product.category._id === currentCategory);\n}\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from '../../utils/helpers';\n\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\nconst { categories } = state;\n\nconst { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\nuseEffect(() => {\n  if (categoryData) {\n    dispatch({\n      type: UPDATE_CATEGORIES,\n      categories: categoryData.categories\n    });\n    categoryData.categories.forEach(category => {\n      idbPromise('categories', 'put', category);\n    });\n  } else if (!loading) {\n    idbPromise('categories', 'get').then(categories => {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categories\n      });\n    });\n  }\n}, [categoryData, loading, dispatch]);\n\n\nconst handleClick = id => {\n  dispatch({\n    type: UPDATE_CURRENT_CATEGORY,\n    currentCategory: id\n  });\n\n  \n};\nreturn (\n  <div>\n    <h2>Choose a Category:</h2>\n    {categories.map(item => (\n      <button\n        key={item._id}\n        onClick={() => {\n          handleClick(item._id);\n        }}\n      >\n        {item.name}\n      </button>\n    ))}\n  </div>\n);\n}\n\nexport default CategoryMenu;\n","import React from 'react';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n  type=\"number\"\r\n  placeholder=\"1\"\r\n  value={item.purchaseQuantity}\r\n  onChange={onChange}\r\n/>\r\n         <span\r\n  role=\"img\"\r\n  aria-label=\"trash\"\r\n  onClick={() => removeFromCart(item)}\r\n>\r\n  🗑️\r\n</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\r\nimport CartItem from '../CartItem';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport Auth from '../../utils/auth';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\nconst Cart = () => {\r\n\r\n    const [state, dispatch] = useStoreContext();\r\n    \r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n    useEffect(() => {\r\n      if (data) {\r\n        stripePromise.then((res) => {\r\n          res.redirectToCheckout({ sessionId: data.checkout.session });\r\n        });\r\n      }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n      async function getCart() {\r\n        const cart = await idbPromise('cart', 'get');\r\n        dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n      };\r\n    \r\n      if (!state.cart.length) {\r\n        getCart();\r\n      }\r\n    }, [state.cart.length, dispatch]);\r\n    \r\nfunction toggleCart() {\r\n  dispatch({ type: TOGGLE_CART });\r\n}\r\n\r\nfunction calculateTotal() {\r\n  let sum = 0;\r\n  state.cart.forEach(item => {\r\n    sum += item.price * item.purchaseQuantity;\r\n  });\r\n\r\n  \r\n  return sum.toFixed(2);\r\n}\r\nfunction submitCheckout() {\r\n  const productIds = [];\r\n\r\n  state.cart.forEach((item) => {\r\n    for (let i = 0; i < item.purchaseQuantity; i++) {\r\n      productIds.push(item._id);\r\n    }\r\n  });\r\n\r\n  getCheckout({\r\n    variables: { products: productIds }\r\n  });\r\n}\r\n\r\n\r\nif (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span\r\n          role=\"img\"\r\n          aria-label=\"trash\">🛒</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n  <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n  <h2>Shopping Cart</h2>\r\n  {state.cart.length ? (\r\n    <div>\r\n      {state.cart.map(item => (\r\n        <CartItem key={item._id} item={item} />\r\n      ))}\r\n      <div className=\"flex-row space-between\">\r\n        <strong>Total: ${calculateTotal()}</strong>\r\n        {\r\n          Auth.loggedIn() ?\r\n          <button onClick={submitCheckout}>\r\n          Checkout\r\n        </button>\r\n            :\r\n            <span>(log in to check out)</span>\r\n        }\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h3>\r\n      <span role=\"img\" aria-label=\"shocked\">\r\n        😱\r\n      </span>\r\n      You haven't added anything to your cart yet!\r\n    </h3>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\nconst { id } = useParams();\n\nconst [currentProduct, setCurrentProduct] = useState({})\n\nconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\nconst { products, cart } = state;\n\nuseEffect(() => {\n  // already in global store\n  if (products.length) {\n    setCurrentProduct(products.find(product => product._id === id));\n  } \n  // retrieved from server\n  else if (data) {\n    dispatch({\n      type: UPDATE_PRODUCTS,\n      products: data.products\n    });\n\n    data.products.forEach((product) => {\n      idbPromise('products', 'put', product);\n    });\n  }\n  // get cache from idb\n  else if (!loading) {\n    idbPromise('products', 'get').then((indexedProducts) => {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: indexedProducts\n      });\n    });\n  }\n}, [products, data, loading, dispatch, id]);\n\nconst addToCart = () => {\n  const itemInCart = cart.find((cartItem) => cartItem._id === id)\n\n  if (itemInCart) {\n    dispatch({\n      type: UPDATE_CART_QUANTITY,\n      _id: id,\n      purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n    });\n    // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n    idbPromise('cart', 'put', {\n      ...itemInCart,\n      purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n    });\n  } else {\n    dispatch({\n      type: ADD_TO_CART,\n      product: { ...currentProduct, purchaseQuantity: 1 }\n    });\n    // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n    idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n  }\n}\n\nconst removeFromCart = () => {\n  dispatch({\n    type: REMOVE_FROM_CART,\n    _id: currentProduct._id\n  });\n\n  // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n  idbPromise('cart', 'delete', { ...currentProduct });\n};\n\nreturn (\n  <>\n    {currentProduct && cart ? (\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n        </Link>\n\n        <h2>{currentProduct.name}</h2>\n\n        <p>\n          {currentProduct.description}\n        </p>\n\n        <p>\n          <strong>Price:</strong>\n          ${currentProduct.price}\n          {\" \"}\n          <button onClick={addToCart}>\n            Add to Cart\n          </button>\n          <button \n            disabled={!cart.find(p => p._id === currentProduct._id)} \n            onClick={removeFromCart}\n          >\n            Remove from Cart\n          </button>\n        </p>\n\n        <img\n          src={`/images/${currentProduct.image}`}\n          alt={currentProduct.name}\n        />\n      </div>\n    ) : null}\n    {\n      loading ? <img src={spinner} alt=\"loading\" /> : null\n    }\n    <Cart />\n  </>\n);\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport { useMutation } from '@apollo/client';\r\n\r\n\r\n\r\nfunction Success() {\r\n    const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n    useEffect(() => {\r\n        async function saveOrder() {\r\n          const cart = await idbPromise('cart', 'get');\r\n          const products = cart.map(item => item._id);\r\n          \r\n          if (products.length) {\r\n            const { data } = await addOrder({ variables: { products } });\r\n            const productData = data.addOrder.products;\r\n        \r\n            productData.forEach((item) => {\r\n              idbPromise('cart', 'delete', item);\r\n            });\r\n          }\r\n            \r\n          setTimeout(() => {\r\n            window.location.assign('/');\r\n          }, 3000);\r\n        }\r\n    \r\n        saveOrder();\r\n      }, [addOrder]);\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1>Success!</h1>\r\n          <h2>\r\n            Thank you for your purchase!\r\n          </h2>\r\n          <h2>\r\n            You will now be redirected to the homepage\r\n          </h2>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Success;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Nav from './components/Nav';\nimport Success from \"./pages/Success\";\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}